{"version":3,"sources":["components/MyEditor.tsx","components/GitHubButton.tsx","components/TerminateButton.tsx","components/TopRow.tsx","components/EditorHelp.tsx","components/DelayedNotRunning.tsx","components/HalfRow.tsx","ConfigPanel.tsx","util/go.ts","App.tsx","index.tsx","util/dom.ts"],"names":["MyEditor","props","value","onChange","height","options","formatOnPaste","formatOnType","minimap","enabled","stablePeek","suggest","preview","language","onMount","editor","monaco","modelUri","Uri","parse","model","createModel","languages","json","jsonDefaults","setDiagnosticsOptions","validate","schemaValidation","schemas","uri","schema","JSON","fileMatch","toString","setModel","overrideServices","storageService","get","getNumber","getBoolean","key","remove","store","onDidChangeStorage","onWillSaveState","GitHubButton","style","background","border","margin","padding","display","flexDirection","alignItems","justifyContent","cursor","fontSize","onClick","window","__openLink","alt","src","width","TerminateButton","__terminate","close","TopRow","version","EditorHelp","DelayedNotRunning","useTimeout","delay","isReady","position","color","backgroundColor","Fragment","HalfRow","alignContent","children","ConfigPanel","loadedConfigName","e","onLoadConfig","target","configNames","map","name","appliedConfigName","a","toast","__getNextKey","line","getPosition","range","Range","lineNumber","column","op","identifier","major","minor","text","executeEdits","editorValue","trigger","__saveConfig","setLoadedConfigName","setEditorValue","__loadConfig","__applyConfig","App","versionState","useAsync","__getVersion","useAsyncFn","__ping","pingState","requestPing","schemaState","__loadSchema","__loadAppliedConfigName","appliedConfigNameState","requestAppliedConfigName","__loadConfigNames","configNamesState","requestConfigNames","useState","setEditor","useMonaco","handleOnLoadConfig","configName","loadConfig","handleOnGetNextKey","getNextKey","console","log","handleOnSave","saveConfig","handleOnApply","applyConfig","useEffect","loading","useInterval","addCommand","KeyCode","F1","F2","F3","addEventListener","preventDefault","document","querySelector","focus","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c492db1b.chunk.js","sourcesContent":["import React from \"react\";\nimport Editor, { OnMount } from \"@monaco-editor/react\";\nimport { editor } from \"monaco-editor\";\n\ninterface Props {\n  value?: string;\n  onChange: (v?: string) => void;\n  schema: string;\n  onMount: (e: editor.IStandaloneCodeEditor) => void;\n}\n\nexport default function MyEditor(props: Props): JSX.Element {\n  const onMount: OnMount = (editor, monaco) => {\n    const modelUri = monaco.Uri.parse(\"a://b/foo.json\");\n    const model = monaco.editor.createModel(\"\", \"json\", modelUri);\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      schemaValidation: \"error\",\n      schemas: [\n        {\n          uri: \"a://b/foo.json\",\n          schema: JSON.parse(props.schema),\n          fileMatch: [modelUri.toString()],\n        },\n      ],\n    });\n    editor.setModel(model);\n    props.onMount(editor);\n  };\n\n  return (\n    <Editor\n      value={props.value}\n      onChange={props.onChange}\n      height=\"80vh\"\n      options={{\n        formatOnPaste: true,\n        formatOnType: true,\n        minimap: { enabled: false },\n        stablePeek: true,\n        suggest: {\n          preview: true,\n        },\n      }}\n      language=\"json\"\n      onMount={onMount}\n      overrideServices={{\n        storageService: {\n          get() {},\n          getNumber() {},\n          getBoolean(key: any) {\n            return key === \"expandSuggestionDocs\";\n          },\n          remove() {},\n          store() {},\n          onDidChangeStorage() {},\n          onWillSaveState() {},\n        },\n      }}\n    />\n  );\n}\n","import React from \"react\";\n\ninterface Props {}\n\nexport default function GitHubButton(props: Props): JSX.Element {\n  const onClick = () => {\n    window.__openLink(\"https://github.com/wirekang/mouseable\");\n  };\n\n  return (\n    <a\n      style={{\n        background: \"none\",\n        border: \"none\",\n        margin: 0,\n        padding: 3,\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        cursor: \"pointer\",\n        fontSize: 13,\n      }}\n      onClick={onClick}\n    >\n      <img alt=\"github\" src=\"github.png\" width={50} height={20} />\n    </a>\n  );\n}\n","import React from \"react\";\n\ninterface Props {}\n\nexport default function TerminateButton(props: Props): JSX.Element {\n  const onClick = () => {\n    window.__terminate();\n    window.close();\n  };\n  return (\n    <div style={{ fontSize: 10 }}>\n      You can close this window safely.\n      <button style={{ fontSize: 12 }} onClick={onClick}>\n        Terminate Program\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport GitHubButton from \"./GitHubButton\";\nimport TerminateButton from \"./TerminateButton\";\n\ninterface Props {\n  version: string;\n}\n\nexport default function TopRow(props: Props): JSX.Element {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        margin: 3,\n      }}\n    >\n      <span>Version: {props.version}</span>\n      <GitHubButton />\n      <TerminateButton />\n    </div>\n  );\n}\n","import React from \"react\";\n\ninterface Props {}\n\nexport default function EditorHelp(props: Props): JSX.Element {\n  return (\n    <div\n      style={{\n        fontSize: 12,\n      }}\n    >\n      <ul>\n        <li>\n          Press <b>Ctrl+I</b> to show suggestions.\n        </li>\n        <li>\n          Press <b>F1</b> to insert key.\n        </li>\n        <li>\n          Press <b>F2</b> to save.\n        </li>\n        <li>\n          Press <b>F3</b> to apply.\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTimeout } from \"react-use\";\n\ninterface Props {\n  delay: number;\n}\n\nexport default function DelayedNotRunning(props: Props): JSX.Element {\n  const [isReady] = useTimeout(props.delay);\n  if (isReady()) {\n    return (\n      <h2\n        style={{\n          position: \"absolute\",\n          color: \"red\",\n          width: \"100vw\",\n          height: \"100vh\",\n          backgroundColor: \"white\",\n        }}\n      >\n        Mouseable is not running.\n      </h2>\n    );\n  }\n\n  return <React.Fragment />;\n}\n","import React from \"react\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function HalfRow(props: Props): JSX.Element {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignContent: \"center\",\n        margin: 0,\n        padding: 0,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\ninterface Props {\n  appliedConfigName?: string;\n  configNames?: string[];\n  loadedConfigName?: string;\n  onLoadConfig: (name: string) => void;\n}\n\nexport default function ConfigPanel(props: Props): JSX.Element {\n  return (\n    <div style={{}}>\n      <select\n        value={props.loadedConfigName}\n        onChange={(e) => {\n          props.onLoadConfig(e.target.value);\n        }}\n      >\n        {props.configNames?.map((name) => {\n          return <option key={name}>{name}</option>;\n        })}\n      </select>\n      <br />\n      Applied: {props.appliedConfigName}\n    </div>\n  );\n}\n","import { editor } from \"monaco-editor\";\nimport toast from \"react-simple-toasts\";\nimport { Monaco } from \"@monaco-editor/react\";\n\nexport async function getNextKey(editor: editor.IStandaloneCodeEditor, monaco: Monaco): Promise<void> {\n  try {\n    toast(\"Press any keys include double press.\");\n    const key = await window.__getNextKey();\n    if (!key) {\n      return;\n    }\n\n    const line = editor.getPosition();\n    if (!line) {\n      return;\n    }\n\n    const range = new monaco.Range(line.lineNumber, line.column, line.lineNumber, line.column);\n    const id = { major: 1, minor: 1 };\n    const op = { identifier: id, range: range, text: `\"${key}\"` };\n    editor.executeEdits(\"my-source\", [op]);\n  } catch (e) {\n    toast(`${e}`);\n  }\n}\n\nexport async function saveConfig(\n  loadedConfigName: string | undefined,\n  editorValue: string | undefined,\n  editor: editor.IStandaloneCodeEditor,\n) {\n  try {\n    editor.trigger(\"anyString\", \"editor.action.formatDocument\", null);\n    if (!loadedConfigName) {\n      toast(\"Nothing was loaded.\");\n      return;\n    }\n    await window.__saveConfig(loadedConfigName, editorValue ?? \"\");\n    toast(\"Saved\");\n  } catch (e) {\n    toast(`${e}`);\n  }\n}\n\nexport async function loadConfig(\n  name: string,\n  setLoadedConfigName: (v: string) => void,\n  setEditorValue: (v: string) => void,\n) {\n  try {\n    const json = await window.__loadConfig(name);\n    setLoadedConfigName(name);\n    setEditorValue(json);\n  } catch (e) {\n    toast(`${e}`);\n  }\n}\n\nexport async function applyConfig(name: string | undefined) {\n  try {\n    if (!name) {\n      toast(\"Nothing was loaded.\");\n      return;\n    }\n\n    await window.__applyConfig(name);\n    toast(`${name} Applied`);\n  } catch (e) {\n    toast(`${e}`);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport MyEditor from \"./components/MyEditor\";\nimport TopRow from \"./components/TopRow\";\nimport EditorHelp from \"./components/EditorHelp\";\nimport { useAsync, useAsyncFn, useInterval } from \"react-use\";\nimport DelayedNotRunning from \"./components/DelayedNotRunning\";\nimport HalfRow from \"./components/HalfRow\";\nimport ConfigPanel from \"./ConfigPanel\";\nimport { editor } from \"monaco-editor\";\nimport { useMonaco } from \"@monaco-editor/react\";\nimport { applyConfig, getNextKey, loadConfig, saveConfig } from \"./util/go\";\n\nfunction App() {\n  const versionState = useAsync(window.__getVersion);\n  const [pingState, requestPing] = useAsyncFn(window.__ping);\n  const schemaState = useAsync(window.__loadSchema);\n  const [appliedConfigNameState, requestAppliedConfigName] = useAsyncFn(window.__loadAppliedConfigName);\n  const [configNamesState, requestConfigNames] = useAsyncFn(window.__loadConfigNames);\n  const [editorValue, setEditorValue] = useState<string>();\n  const [editor, setEditor] = useState<editor.IStandaloneCodeEditor>();\n  const [loadedConfigName, setLoadedConfigName] = useState<string>();\n  const monaco = useMonaco();\n\n  const handleOnLoadConfig = (configName: string) => {\n    loadConfig(configName, setLoadedConfigName, setEditorValue);\n  };\n\n  const handleOnGetNextKey = () => {\n    if (!editor || !monaco) {\n      console.log(editor, monaco);\n      return;\n    }\n\n    getNextKey(editor, monaco);\n  };\n\n  const handleOnSave = () => {\n    if (!editor) {\n      return;\n    }\n\n    saveConfig(loadedConfigName, editorValue, editor);\n  };\n\n  const handleOnApply = () => {\n    applyConfig(loadedConfigName);\n  };\n\n  useEffect(() => {\n    requestAppliedConfigName();\n    requestConfigNames();\n  }, []);\n\n  useEffect(() => {\n    if (appliedConfigNameState.value && !loadedConfigName) {\n      handleOnLoadConfig(appliedConfigNameState.value);\n    }\n  }, [appliedConfigNameState.loading, handleOnLoadConfig, loadedConfigName]);\n\n  useInterval(() => {\n    requestPing();\n  }, 2000);\n\n  useEffect(() => {\n    if (appliedConfigNameState.value) {\n    }\n  }, [appliedConfigNameState.value]);\n\n  useEffect(() => {\n    if (!editor || !monaco) {\n      return;\n    }\n\n    editor.addCommand(monaco.KeyCode.F1, handleOnGetNextKey);\n    editor.addCommand(monaco.KeyCode.F2, handleOnSave);\n    editor.addCommand(monaco.KeyCode.F3, handleOnApply);\n  }, [editor, monaco, handleOnGetNextKey, handleOnSave, handleOnApply]);\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      {pingState.loading && <DelayedNotRunning delay={1000} />}\n      <TopRow version={versionState.value ?? \"\"} />\n      <HalfRow>\n        <EditorHelp />\n        <ConfigPanel\n          configNames={configNamesState.value}\n          loadedConfigName={loadedConfigName}\n          onLoadConfig={handleOnLoadConfig}\n          appliedConfigName={appliedConfigNameState.value}\n        />\n      </HalfRow>\n      {schemaState.value && (\n        <MyEditor\n          value={editorValue}\n          onChange={setEditorValue}\n          schema={schemaState.value}\n          onMount={setEditor}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { isDev } from \"./gobind\";\nimport toast from \"react-simple-toasts\";\nimport { focusMonacoEditor } from \"./util/dom\";\n\nif (isDev) {\n  console.log(\"DEV MODE\");\n}\n\nwindow.addEventListener(\"keydown\", (e) => {\n  if (e.key === \"F1\" || e.key === \"F2\" || e.key === \"F3\") {\n    e.preventDefault();\n    toast(\"Press again. (Changed focus to editor)\");\n    focusMonacoEditor();\n  }\n});\n\nwindow.addEventListener(\"error\", (e) => {\n  toast(e.message);\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","export function focusMonacoEditor() {\n  (document.querySelector(\"textarea.monaco-mouse-cursor-text\") as any).focus();\n}\n"],"sourceRoot":""}